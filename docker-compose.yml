version: '3.8'

services:
  # PostgreSQL - sempre dispon√≠vel
  db:
    image: postgres:16-alpine
    container_name: rbooh-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-rbooh}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend NestJS - apenas com profile "full"
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rbooh-backend
    restart: unless-stopped
    profiles: ["full"]
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-rbooh}?schema=public
      NODE_ENV: production
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5000/api || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React + Vite - apenas com profile "full"
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rbooh-frontend
    restart: unless-stopped
    profiles: ["full"]
    ports:
      - "${FRONTEND_PORT:-5173}:80"
    depends_on:
      - backend

volumes:
  postgres_data:
    name: rbooh-postgres-data